	//Function to find the shortest distance of all the vertices
  //from the source vertex S.
    vector <int> dijkstra(int v, vector<vector<int>> adj[], int s)
    {
        // Code here
        vector<int> vec;
        vector<int> dist(v,INT_MAX);
        priority_queue<pair<int,int> ,vector<pair<int,int>>, greater<pair<int,int>>> pq;
        dist[s]=0;
        pq.push(make_pair(0,s));
        while(!pq.empty())
        {
            int curr=pq.top().second;
            int curr_d=pq.top().first;
            pq.pop();
            for(int i=0; i<adj[curr].size(); i++)
            {
                vec=adj[curr][i];
                int node=vec[0];
                int dist2=vec[1];
                if(dist[curr]+dist2<dist[node])
                {
                    dist[node]=dist[curr]+dist2;
                    pq.push(make_pair(dist[node],node));
                }
            }
        }
        return dist;
    }
    
